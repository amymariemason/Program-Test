#************************************
# Based on Practicals for Mendelian randomization using individual-level data (R)
#
#************************************

#************************************
# Practical 1
#************************************
rm(list = ls()) # clear workspace

# install and load packages
# install.packages("ivpack")
library(ivpack)

#Load the data
rm(list=ls()) #Remove any existing objects in R
 setwd("//me-filer1/home$/am2609/My Documents/Programs/Practicals for MR course") #Change with your location
coursedata = read.csv("coursedata.csv") #Load data
attach(coursedata) #Attach coursedata to the R search path
str(coursedata) #Info on the structure of the data
head(coursedata) #Show first 6 entries

# 1. Causal estimate using the ratio method
# a
by1 = lm(y~g1)$coef[2] #Genetic association with the outcome
bx1 = lm(x~g1)$coef[2] #Genetic association with the exposure

re1 = by1/bx1 # ratio estimate for variant 1

#b
byse1 = coef(summary(lm(y~g1)))[2, "Std. Error"] #standard error of Genetic association with the outcome
rese1_1 = byse1/bx1  # standard error of ratio estimate (first order)


#c

bxse1 = coef(summary(lm(x~g1)))[2, "Std. Error"] #standard error of Genetic association with the exposure

rese2_1 = sqrt(byse1^2/bx1^2 + by1^2*bxse1^2/bx1^4)   # standard error of ratio estimate (second order)

#d

fstat1 = summary(lm(x~g1))$fstatistic[1] # f statistic of regression of the risk factor on the genetic variant
fstat1

#e
# repeat for g2-g4

ratio_estimate<-function(g, x, y){
by = lm(y~g)$coef[2]
byse = summary(lm(y~g))$coef[2,2]
bx = lm(x~g)$coef[2]
bxse = summary(lm(x~g))$coef[2,2]
beta.ratio = by/bx
se.ratiofirst = byse/sqrt(bx^2)
se.ratiosecond = sqrt(byse^2/bx^2 + by^2*bxse^2/bx^4)
fstat = summary(lm(x~g))$f[1]
MAF = (sum(g==1) + 2*sum(g==2))/(2*length(g))
return(c(by, byse, bx, bxse, beta.ratio, se.ratiofirst, se.ratiosecond,
fstat, MAF))
}
g_mat=cbind(g1,g2,g3,g4)
ratio.all<-apply(g_mat,2,ratio_estimate, x=x,y=y)
row.names(ratio.all)<-c("by","byse","bx","bxse","beta.ratio","se.ratio.first",
"se.ratio.second","fstat","MAF")
ratio.all


# save the data
bx = c(bx1, bx2, bx3, bx4)
by = c(by1, by2, by3, by4)
bxse = c(bxse1, bxse2, bxse3, bxse4)
byse = c(byse1, byse2, byse3, byse4)
save(bx, by, bxse, byse, file="summarized_data.RData")

#factor
lm(y~x)$coef[2] # estimate for the observational association of risk factor on outcome

##############################################################################################

# 2. Causal estimate using the two-stage least squares method for a continuous outcome

#a

fitted.values=lm(x~g1+g2+g3+g4)$fitted # fitted values of the risk factor when risk factor regressed on genetic variants
by.hand=lm(y~fitted.values)  # regressing outcome on fitted values
summary(by.hand)$coef[2] # estimate
summary(by.hand)$coef[2,2] #standard error


#b

ivmodel.all = ivreg(y~x|g1+g2+g3+g4, x=TRUE)
summary(ivmodel.all)$coef[2] #2SLS estimate
summary(ivmodel.all)$coef[2,2] #Standard error of the 2SLS estimate

#c

summary(lm(x~g1+g2+g3+g4))$f[1] #F statistic for all of the genetic variants

# d

ivmodel.all = ivreg(y~x|g1, x=TRUE) # 2SLS based on g1 only
summary(ivmodel.all)$coef[2] #2SLS estimate
summary(ivmodel.all)$coef[2,2] #Standard error of the 2SLS estimate



##################################################################################


## 3. Causal estimate for binary outcome

# a

by1.bin = glm(y.bin~g1, family=binomial)$coef[2] #logistic regression for gene-outcome
#association
byse1.bin = summary(glm(y.bin~g1, family=binomial))$coef[2,2]
bx1.bin = lm(x[y.bin==0]~g1[y.bin ==0])$coef[2] #linear regression in the controls only
beta.ratio1.bin = by1.bin/bx1.bin
beta.ratio1.bin #ratio estimate for g1

se.ratio1.bin = byse1.bin/bx1.bin  # standard error of ratio estimate 
se.ratio1.bin


# b

fitted.values1=lm(x~g1)$fitted # fitted values of the risk factor when risk factor regressed on genetic variants
tsls1=glm(y.bin~fitted.values1, family = binomial) 
summary(tsls1)$coef[2]
summary(tsls1)$coef[2,2]

#c
g1.con = g1[y.bin ==0] #values for g1 in the controls only
x.con = x[y.bin ==0] #values for the risk factor in the controls only
tsls1.con = glm(y.bin~predict(lm(x.con~g1.con), newdata=list(g1.con=g1)), family=binomial)
summary(tsls1.con)$coef[2]

tsls1.con = glm(y.bin~predict(lm(x.con~g1.con), newdata=list(g1.con=c(0,0,1,2))), family=binomial)

#data
